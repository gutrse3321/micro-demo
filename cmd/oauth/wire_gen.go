// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"demo/oauth"
	"demo/oauth/endpoints"
	"github.com/google/wire"
	"github.com/gutrse3321/aki-remote"
	"github.com/gutrse3321/aki/pkg/app"
	"github.com/gutrse3321/aki/pkg/config"
	"github.com/gutrse3321/aki/pkg/log"
	"github.com/gutrse3321/aki/pkg/transports/http"
)

// Injectors from wire.go:

func CreateApp(configPath string) (*app.Application, error) {
	viper, err := config.New(configPath)
	if err != nil {
		return nil, err
	}
	options, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.New(options)
	if err != nil {
		return nil, err
	}
	appOptions, err := oauth.NewOptions(viper, logger)
	if err != nil {
		return nil, err
	}
	httpOptions, err := http.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	loginEndpoint := endpoints.NewLoginEndpoint()
	initControllers := endpoints.CreateInitControllersFn(loginEndpoint)
	engine := http.NewRouter(httpOptions, logger, initControllers)
	server, err := http.New(httpOptions, logger, engine)
	if err != nil {
		return nil, err
	}
	application, err := oauth.NewApp(appOptions, logger, server)
	if err != nil {
		return nil, err
	}
	return application, nil
}

// wire.go:

/**
 * @Author: Tomonori
 * @Date: 2020/6/10 16:14
 * @Title:
 * --- --- ---
 * @Desc:
 */
var wireSet = wire.NewSet(log.WireSet, config.WireSet, http.WireSet, aki_remote.WireSet, oauth.WireSet, endpoints.WireSet)
