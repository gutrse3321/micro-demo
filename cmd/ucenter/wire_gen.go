// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"demo/pkg/app"
	"demo/pkg/config"
	"demo/pkg/log"
	"demo/pkg/transports/rpc"
	"demo/ucenter"
	"demo/ucenter/provider"
	"github.com/google/wire"
)

// Injectors from wire.go:

func CreateApp(configPath string) (*app.Application, error) {
	viper, err := config.New(configPath)
	if err != nil {
		return nil, err
	}
	options, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.New(options)
	if err != nil {
		return nil, err
	}
	ucenterOptions, err := ucenter.NewOptions(viper, logger)
	if err != nil {
		return nil, err
	}
	serverOptions, err := rpc.NewServerOptions(viper)
	if err != nil {
		return nil, err
	}
	initServers := provider.CreateInitRpcServersFn()
	server, err := rpc.NewServer(serverOptions, logger, initServers)
	if err != nil {
		return nil, err
	}
	application, err := ucenter.NewApp(ucenterOptions, logger, server)
	if err != nil {
		return nil, err
	}
	return application, nil
}

// wire.go:

/**
 * @Author: Tomonori
 * @Date: 2020/4/17 17:58
 * @Title:
 * --- --- ---
 * @Desc:
 */
var providerSet = wire.NewSet(log.ProviderSet, config.ProviderSet, rpc.ServerProviderSet, ucenter.ProviderSet, provider.ProviderSet)
